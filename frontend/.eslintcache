[{"/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/index.js":"1","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/App.js":"2","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/routing/ProtectedRoute.js":"3","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/store/store.js":"4","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/containers/PrivateLayouts/TheLayout.js":"5","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/views/Pages/PublicPages/Login/Login.js":"6","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/views/Pages/PublicPages/ThirdPartyLogin/index.js":"7","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/views/Pages/PrivatePages/DnsSetting/index.js":"8","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/containers/PrivateLayouts/PrivateHeader.js":"9","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/containers/PrivateLayouts/TheContent.js":"10","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/redux/auth/action.js":"11","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/redux/index.js":"12","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/utils/qs.js":"13","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/routing/routes.js":"14","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/redux/auth/type.js":"15","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/redux/auth/reducer.js":"16","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/redux/dns/index.js":"17","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/views/Pages/PrivatePages/Network/index.js":"18","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/views/Pages/PrivatePages/Firewall/index.js":"19","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/views/Pages/PrivatePages/Home/index.js":"20","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/views/Components/host/HostRecords.js":"21","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/views/Components/txt/TxtOptions.js":"22","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/views/Components/mx/MXOptions.js":"23","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/redux/dns/txt/reducer.js":"24","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/redux/dns/mx/reducer.js":"25","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/views/Components/host/HostRecordItem.js":"26","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/service/service.js":"27","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/atoms/dns/hostNameText.js":"28","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/redux/dns/txt/action.js":"29","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/redux/dns/mx/action.js":"30","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/views/Components/mx/MxItem.js":"31","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/views/Components/txt/TxtItem.js":"32","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/redux/dns/txt/type.js":"33","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/utils/reducerUtil.js":"34","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/redux/dns/mx/type.js":"35","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/redux/dns/host/reducer.js":"36","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/redux/dns/host/type.js":"37","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/redux/dns/host/action.js":"38","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/utils/commonToastr.js":"39"},{"size":543,"mtime":1614236331126,"results":"40","hashOfConfig":"41"},{"size":1526,"mtime":1614236845273,"results":"42","hashOfConfig":"41"},{"size":449,"mtime":1612964323283,"results":"43","hashOfConfig":"41"},{"size":344,"mtime":1612964323283,"results":"44","hashOfConfig":"41"},{"size":1568,"mtime":1614232552917,"results":"45","hashOfConfig":"41"},{"size":3406,"mtime":1612964323289,"results":"46","hashOfConfig":"41"},{"size":743,"mtime":1612964323289,"results":"47","hashOfConfig":"41"},{"size":269,"mtime":1614170705872,"results":"48","hashOfConfig":"41"},{"size":1151,"mtime":1614233287906,"results":"49","hashOfConfig":"41"},{"size":892,"mtime":1614238685544,"results":"50","hashOfConfig":"41"},{"size":515,"mtime":1612964323282,"results":"51","hashOfConfig":"41"},{"size":243,"mtime":1614236756189,"results":"52","hashOfConfig":"41"},{"size":477,"mtime":1612964323284,"results":"53","hashOfConfig":"41"},{"size":1315,"mtime":1614171070124,"results":"54","hashOfConfig":"41"},{"size":122,"mtime":1612964323282,"results":"55","hashOfConfig":"41"},{"size":763,"mtime":1614238738842,"results":"56","hashOfConfig":"41"},{"size":205,"mtime":1614238653627,"results":"57","hashOfConfig":"41"},{"size":980,"mtime":1612964323288,"results":"58","hashOfConfig":"41"},{"size":688,"mtime":1612964323287,"results":"59","hashOfConfig":"41"},{"size":730,"mtime":1612964323288,"results":"60","hashOfConfig":"41"},{"size":3489,"mtime":1614255078961,"results":"61","hashOfConfig":"41"},{"size":3508,"mtime":1614254860223,"results":"62","hashOfConfig":"41"},{"size":3501,"mtime":1614255119346,"results":"63","hashOfConfig":"41"},{"size":955,"mtime":1614164985080,"results":"64","hashOfConfig":"41"},{"size":909,"mtime":1614160930564,"results":"65","hashOfConfig":"41"},{"size":8895,"mtime":1614253137137,"results":"66","hashOfConfig":"41"},{"size":599,"mtime":1614256015830,"results":"67","hashOfConfig":"41"},{"size":209,"mtime":1613560979332,"results":"68","hashOfConfig":"41"},{"size":2266,"mtime":1614255987302,"results":"69","hashOfConfig":"41"},{"size":2268,"mtime":1614256087806,"results":"70","hashOfConfig":"41"},{"size":5280,"mtime":1614226724221,"results":"71","hashOfConfig":"41"},{"size":5269,"mtime":1614255562024,"results":"72","hashOfConfig":"41"},{"size":192,"mtime":1614238333538,"results":"73","hashOfConfig":"41"},{"size":299,"mtime":1614157768040,"results":"74","hashOfConfig":"41"},{"size":183,"mtime":1614160650159,"results":"75","hashOfConfig":"41"},{"size":1202,"mtime":1614251442119,"results":"76","hashOfConfig":"41"},{"size":262,"mtime":1614251400025,"results":"77","hashOfConfig":"41"},{"size":2779,"mtime":1614256168777,"results":"78","hashOfConfig":"41"},{"size":537,"mtime":1614254845789,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hchzdu",{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"86"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"86"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/index.js",[],"/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/App.js",[],"/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/routing/ProtectedRoute.js",[],["169","170"],"/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/store/store.js",[],"/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/containers/PrivateLayouts/TheLayout.js",[],"/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/views/Pages/PublicPages/Login/Login.js",["171","172","173","174"],"import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { login } from \"../../../../redux/auth/action\";\nimport { useDispatch } from \"react-redux\";\nimport axios from \"axios\";\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const { register, handleSubmit, errors } = useForm({\n    mode: \"onChange\",\n  });\n\n  const loginUser = (value) => {\n    const loginData = {\n      userName: value.email,\n      password: value.password,\n    };\n    dispatch(login(loginData));\n  };\n\n  const authenticate = () => {\n    window.location.href = \"https://idp.myid-stg.disney.com/as/authorization.oauth2?client_id=ddi-dev&response_type=id_token+token&redirect_uri=http://localhost:3000/callback&nonce=APPLICATION_GENERATED_ONE_TIME_NONCE&scope=openid\"\n  };\n\n  return (\n    <div className=\"login-form-sec-outer\">\n      <div className=\"login-form-sec-inner\">\n        <div className=\"login-form login-form-sec\">\n          <div style={{ margin: \"0 0 20px\" }}>\n            <button className=\"btn btn-primary w-100\" onClick={authenticate}>\n              <a style={{ color: \"white\" }}>\n                Login with{\" \"}\n                <img\n                  _ngcontent-eku-c13=\"\"\n                  src=\"https://solo.myid-stg.disney.com/assets/myid.png\"\n                  style={{ height: \"19px\" }}\n                />\n              </a>\n            </button>\n          </div>\n          <form\n            className=\"mb-4\"\n            onSubmit={handleSubmit(loginUser)}\n            autoComplete=\"off\"\n          >\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleInputEmail1\">Email address</label>\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                id=\"exampleInputEmail1\"\n                placeholder=\"Email address\"\n                aria-describedby=\"emailHelp\"\n                name=\"email\"\n                ref={register({\n                  required: {\n                    value: true,\n                    message: \"Please enter your email\",\n                  },\n                })}\n              />\n              {errors.email && (\n                <p className=\"customErrors text-danger mt-2\">\n                  {errors.email.message}\n                </p>\n              )}\n            </div>\n            <div className=\"form-group password-input\">\n              <label htmlFor=\"exampleInputPassword1\">Password</label>\n              <input\n                type=\"password\"\n                id=\"passInput\"\n                className=\"form-control\"\n                id=\"exampleInputPassword1\"\n                placeholder=\"Password\"\n                name=\"password\"\n                ref={register({ required: true })}\n              />\n              {errors.password && (\n                <p className=\"customErrors text-danger mt-2\">\n                  Please enter password\n                </p>\n              )}\n            </div>\n            <div className=\"form-check\">\n              <label className=\"form-check-label\" htmlFor=\"rememberPassword\">\n                Remember me\n              </label>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary w-100\">\n              {\"Log In\"}\n            </button>\n\n            {/*<Dimmer active={loading} inverted><Loader active={loading} className={'lcolor'}/></Dimmer>*/}\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Login;\n","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/views/Pages/PublicPages/ThirdPartyLogin/index.js",["175","176"],"import React, { useEffect, useState } from 'react';\nimport { queryString } from '../../../../utils/qs';\nimport axios from 'axios';\nconst ThirdPartyLogin = (props) => {\n  const [userInfo, setUserInfo] = useState('');\n\n  useEffect(() => {\n    const accessToken = queryString(props.location.search).access_token;\n    setUserInfo(queryString(props.location.search).access_token);\n    // const config = {\n    //   headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n    //   access_token: accessToken,\n    // };\n    // const data = 'access_token=' + queryString(props.location.search).code;\n    \n  }, [props, setUserInfo, axios]);\n\n  return <div className='testing'>Access Token: {userInfo}</div>;\n};\n\nexport default ThirdPartyLogin;\n","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/views/Pages/PrivatePages/DnsSetting/index.js",["177"],"import React, {useEffect} from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport \"../../../../App.css\";\n\nconst DnsSetting = (props) => {\n\n  useEffect(() => {\n    props.history.push(\"/ddi/mx\")\n  }, [])\n\n  return <h1>&nbsp;</h1>;\n};\n\nexport default DnsSetting;\n","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/containers/PrivateLayouts/PrivateHeader.js",[],"/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/containers/PrivateLayouts/TheContent.js",[],"/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/redux/auth/action.js",[],"/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/redux/index.js",[],"/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/utils/qs.js",[],"/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/routing/routes.js",[],"/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/redux/auth/type.js",[],"/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/redux/auth/reducer.js",["178"],"import { LOGIN_FAILED, LOGIN_SUCCESS, LOGOUT } from \"./type\";\n\nexport default (state = initialState, action) => {\n  const { type } = action;\n  switch (type) {\n    case LOGIN_SUCCESS:\n      localStorage.setItem(\"token\", token);\n      return {\n        ...state,\n        isAuth: true,\n      };\n    case LOGIN_FAILED:\n      return {\n        ...state,\n        isAuth: false,\n      };\n    case LOGOUT:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        isAuth: false,\n      };\n    default:\n      return state;\n  }\n};\n\nconst token = \"qwertyuiopkjbkjbibbbkhb\";\nconst initialState = {\n  token:\n    localStorage.getItem(\"token\") !== null\n      ? localStorage.getItem(\"token\")\n      : null,\n  isAuth: localStorage.getItem(\"token\") !== null,\n};\n","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/redux/dns/index.js",[],"/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/views/Pages/PrivatePages/Network/index.js",[],"/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/views/Pages/PrivatePages/Firewall/index.js",[],"/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/views/Pages/PrivatePages/Home/index.js",["179","180","181"],"import React from 'react';\nimport { Nav, Tabs, Tab } from 'react-bootstrap';\n\nconst Home = () => {\n  return (\n    <div className='container'>\n      <div className='row'>\n        <div className='col-md-12 form-sec'>\n          Home\n          <p>\n            Lorem2 ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus\n            hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque,\n            aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula\n            sollicitudin laoreet viverra, tortor libero sodales leo, eget\n            blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse\n            potenti.\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/views/Components/host/HostRecords.js",["182"],"import React, { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nimport HostRecordItem from \"./HostRecordItem\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  createHostRecord,\n  getHostRecords,\n} from \"../../../redux/dns/host/action\";\n\nconst HostRecords = () => {\n  const [hostName, setHostName] = useState(\"\");\n  const [quantity, setQuantity] = useState(1);\n  const dispatch = useDispatch();\n  const host = useSelector((state) => state.dns.host);\n  const { register, handleSubmit, reset } = useForm();\n\n  useEffect(() => {\n    dispatch(getHostRecords());\n  }, []);\n\n  /**\n   *\n   * @param data\n   */\n  const onFormSubmit = (data) => {\n    const ipAdd = [];\n    delete data.numberOfIps;\n\n    Object.keys(data).length > 0 &&\n      Object.keys(data).forEach((val) => {\n        ipAdd.push({\n          ipv4addr: data[val],\n        });\n      });\n    const datamain = {\n      name: hostName,\n      ipv4addrs: ipAdd,\n    };\n\n    dispatch(createHostRecord(datamain)).then(() => {\n      reset()\n    })\n  };\n\n  const fieldRows = (val) => {\n    return (\n      <div className=\"form-group\">\n        <label className={\"d-block mb-2 font-weight-bold\"}>IP {val}:</label>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          name={`ip_${val}`}\n          ref={register({ required: true })}\n        />\n      </div>\n    );\n  };\n\n  const renderTxtFields = () => {\n    const val = quantity;\n    let rows = [];\n    for (let i = 1; i <= val; i++) {\n      rows.push(fieldRows(i));\n    }\n    return <div>{rows}</div>;\n  };\n\n  return (\n    <div className=\"m-bottom\">\n      <form onSubmit={handleSubmit(onFormSubmit)}>\n        <h6>Hostname</h6>\n        <div className=\"row d-flex\">\n          <div className=\" col-md-4\">\n            <div className={\"form-group\"}>\n              <label className={\"d-block mb-2 font-weight-bold\"}>\n                Hostname\n              </label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"hostname\"\n                onChange={(e) => setHostName(e.target.value)}\n                value={hostName}\n              />\n            </div>\n          </div>\n          <div className=\" col-md-4\">\n            <div className={\"form-group\"}>\n              <label\n                htmlFor=\"exampleFormControlSelect2\"\n                className={\"d-block mb-2 font-weight-bold\"}\n              >\n                Number of IPs\n              </label>\n              <select\n                className=\"custom-select\"\n                id=\"exampleFormControlSelect2\"\n                name=\"numberOfIps\"\n                onChange={(e) => setQuantity(e.target.value)}\n                ref={register({ required: true })}\n              >\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"col-md-4\">\n            <div className={\"form-group\"}>{renderTxtFields()}</div>\n          </div>\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Submit\n        </button>\n      </form>\n\n      <div>\n        <HostRecordItem\n          dnsData={host.host_records}\n          register={register}\n          handleSubmit={handleSubmit}\n          dispatch={dispatch}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default HostRecords;\n","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/views/Components/txt/TxtOptions.js",["183"],"import React, { useEffect, useState } from \"react\";\nimport TxtItem from \"./TxtItem\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createTxtRecord, getTxtRecords } from \"../../../redux/dns/txt/action\";\n\nconst TxtOptions = () => {\n  const [quantity, setQuantity] = useState(1);\n  const { register, handleSubmit, reset } = useForm();\n\n  const dispatch = useDispatch();\n  const dns = useSelector((state) => state.dns.txt);\n\n  useEffect(() => {\n    dispatch(getTxtRecords());\n  }, []);\n\n  /**\n   *\n   * @param value\n   * @returns {Promise<void>}\n   */\n  const submitForm = async (value) => {\n    let formData = [];\n    for (let i = 0; i < Object.keys(value).length; i++) {\n      if (value[i] !== undefined) {\n        formData.push({\n          name: value[i],\n          text: value[`${i}_text`],\n        });\n      }\n    }\n    dispatch(createTxtRecord(formData)).then(() => {\n      reset()\n    })\n  };\n\n  const fieldRows = (val) => {\n    return (\n      <div className=\"row d-flex\">\n        <div className=\" col-md-6\">\n          <div className=\"form-group\">\n            <label className=\"d-block mb-2 font-weight-bold\">Host {val}:</label>\n            <input\n              type=\"text\"\n              name={val}\n              className=\"form-control\"\n              placeholder=\"\"\n              ref={register({ required: true })}\n            />\n          </div>\n        </div>\n        <div className=\" col-md-6\">\n          <div className=\"form-group \">\n            <label className=\"d-block mb-2 font-weight-bold\">\n              Text {val}:\n            </label>\n            <input\n              type=\"text\"\n              name={`${val}_text`}\n              ref={register({ required: true })}\n              className=\"form-control\"\n              placeholder=\"\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  /**\n   *\n   * @returns {JSX.Element}\n   */\n  const renderTxtFields = () => {\n    const val = quantity;\n    let rows = [];\n    for (let i = 1; i <= val; i++) {\n      rows.push(fieldRows(i));\n    }\n    return <div>{rows}</div>;\n  };\n\n  return (\n    <div className=\"m-bottom\">\n      <form onSubmit={handleSubmit(submitForm)}>\n        <h6>TXT Records</h6>\n        <div className=\"row d-flex\">\n          <div className=\"col-md-6 \">\n            <div className=\"form-group \">\n              <label\n                htmlFor=\"exampleFormControlSelect2\"\n                className=\"d-block mb-2 font-weight-bold\"\n              >\n                Number of TXT Records\n              </label>\n              <select\n                onChange={(e) => setQuantity(e.target.value)}\n                className=\"form-control\"\n                id=\"exampleFormControlSelect2\"\n                style={{width: '15%'}}\n              >\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"5\">5</option>\n              </select>\n            </div>\n          </div>\n        </div>\n        {renderTxtFields()}\n        <button\n          type=\"submit\"\n          disabled={dns.create_mx_loader}\n          className=\"btn btn-primary\"\n        >\n          {dns.create_mx_loader ? \"Saving...\" : \"Submit\"}\n        </button>\n      </form>\n      <TxtItem\n        tx_records={dns.tx_records}\n        spinner={dns.get_tx_loader}\n        dispatch={dispatch}\n      />\n    </div>\n  );\n};\n\nexport default TxtOptions;\n","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/views/Components/mx/MXOptions.js",["184"],"import React, { useEffect, useState } from \"react\";\nimport MxItem from \"./MxItem\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createMxRecord, getMxRecords } from \"../../../redux/dns/mx/action\";\n\nconst MXOptions = () => {\n  const [quantity, setQuantity] = useState(1);\n  const { register, handleSubmit, reset } = useForm();\n\n  const dispatch = useDispatch();\n  const dns = useSelector((state) => state.dns.mx);\n\n  useEffect(() => {\n    dispatch(getMxRecords());\n  }, []);\n\n  /**\n   *\n   * @param value\n   * @returns {Promise<void>}\n   */\n  const submitForm = async (value) => {\n    let formData = [];\n    for (let i = 0; i < Object.keys(value).length; i++) {\n      if (value[i] !== undefined) {\n        formData.push({\n          name: value[i],\n          mail_exchanger: value[`${i}_me`],\n        });\n      }\n    }\n    dispatch(createMxRecord(formData)).then(() => {\n      reset()\n    })\n  };\n\n  const fieldRows = (val) => {\n    return (\n      <div className=\"row d-flex\">\n        <div className=\" col-md-6\">\n          <div className=\"form-group\">\n            <label className=\"d-block mb-2 font-weight-bold\">Host {val}:</label>\n            <input\n              type=\"text\"\n              name={val}\n              className=\"form-control\"\n              placeholder=\"\"\n              ref={register({ required: true })}\n            />\n          </div>\n        </div>\n        <div className=\" col-md-6\">\n          <div className=\"form-group \">\n            <label className=\"d-block mb-2 font-weight-bold\">\n              Domain {val}:\n            </label>\n            <input\n              type=\"text\"\n              name={`${val}_me`}\n              ref={register({ required: true })}\n              className=\"form-control\"\n              placeholder=\"\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  /**\n   *\n   * @returns {JSX.Element}\n   */\n  const renderMxFields = () => {\n    const val = quantity;\n    let rows = [];\n    for (let i = 1; i <= val; i++) {\n      rows.push(fieldRows(i));\n    }\n    return <div>{rows}</div>;\n  };\n\n  return (\n    <div className=\"m-bottom\">\n      <form onSubmit={handleSubmit(submitForm)}>\n        <h6>MX Records</h6>\n        <div className=\"row d-flex\">\n          <div className=\"col-md-6 \">\n            <div className=\"form-group \">\n              <label\n                htmlFor=\"exampleFormControlSelect2\"\n                className=\"d-block mb-2 font-weight-bold\"\n              >\n                Number of MX Records\n              </label>\n              <select\n                onChange={(e) => setQuantity(e.target.value)}\n                className=\"form-control\"\n                id=\"exampleFormControlSelect2\"\n                style={{width: '15%'}}\n              >\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"5\">5</option>\n              </select>\n            </div>\n          </div>\n        </div>\n        {renderMxFields()}\n        <button\n          type=\"submit\"\n          disabled={dns.create_mx_loader}\n          className=\"btn btn-primary\"\n        >\n          {dns.create_mx_loader ? \"Saving...\" : \"Submit\"}\n        </button>\n      </form>\n      <MxItem\n        mx_records={dns.mx_records}\n        spinner={dns.get_mx_loader}\n        dispatch={dispatch}\n      />\n    </div>\n  );\n};\n\nexport default MXOptions;\n","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/redux/dns/txt/reducer.js",[],"/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/redux/dns/mx/reducer.js",[],"/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/views/Components/host/HostRecordItem.js",["185"],"import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport swal from \"sweetalert\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  deleteHostRecord,\n  updateHostRecord,\n} from \"../../../redux/dns/host/action\";\n\nconst totalInputAllowed = 4;\n\nconst HostRecordItem = ({ dnsData, dispatch }) => {\n  const [show, setShow] = useState(false);\n  const [editMode, setEditMode] = useState(false);\n  const [singleData, setSingleData] = useState({});\n  const { register, handleSubmit } = useForm();\n\n  /**\n   *\n   * @param id\n   * @param name\n   */\n  const confirmDelete = (id, name) => {\n    swal({\n      title: \"Are you sure?\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then((willDelete) => {\n      if (willDelete) {\n        dispatch(deleteHostRecord(id, name));\n      }\n    });\n  };\n\n  /**\n   *\n   * @param data\n   */\n  const updateClicked = (data) => {\n    const ipAdd = [];\n    delete data.numberOfIps;\n    delete data.ip_1;\n    const eHostName = data.e_host_name;\n    delete data.e_host_name;\n\n    Object.keys(data).length > 0 &&\n      Object.keys(data).forEach((val) => {\n        ipAdd.push({\n          ipv4addr: data[val],\n        });\n      });\n\n    const d = {\n      hostName: eHostName,\n      ipv4addrs: { ipv4addrs: ipAdd },\n    };\n\n    dispatch(updateHostRecord(d));\n  };\n\n  return (\n    <React.Fragment>\n      <table className=\"table table-bordered bg-white mt-5\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>IP</th>\n            <th className={\"text-center\"}>Actions</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {dnsData.length > 0 &&\n            dnsData.map((d) => {\n              const dd =\n                JSON.parse(d.ipv4addrs).length > 0 &&\n                JSON.parse(d.ipv4addrs)\n                  .map((v) => v.ipv4addr)\n                  .join(\" / \");\n              return (\n                <tr>\n                  <td>{d.name}</td>\n                  <td>{dd}</td>\n                  <td>\n                    <div className={\"d-flex justify-content-around\"}>\n                      <span\n                        style={{ cursor: \"pointer\" }}\n                        onClick={() => confirmDelete(d.id, d.name)}\n                      >\n                        <FontAwesomeIcon\n                          icon={faTimesCircle}\n                          className={\"text-danger\"}\n                        />\n                      </span>\n\n                      <span\n                        style={{ cursor: \"pointer\" }}\n                        onClick={() => {\n                          setShow(true);\n                          setSingleData(d);\n                          setEditMode(true);\n                        }}\n                      >\n                        <FontAwesomeIcon\n                          icon={faEdit}\n                          className={\"text-primary\"}\n                        />\n                      </span>\n                    </div>\n                  </td>\n                </tr>\n              );\n            })}\n        </tbody>\n      </table>\n      <Modal\n        show={show}\n        onHide={() => setShow(false)}\n        dialogClassName=\"modal-90w\"\n        aria-labelledby=\"example-custom-modal-styling-title\"\n      >\n        <Modal.Body>\n          {editMode && (\n            <div>\n              <div className=\"modal-dialog\" role=\"document\">\n                <div className=\"modal-content\">\n                  <form onSubmit={handleSubmit(updateClicked)}>\n                    <div className=\"modal-header\">\n                      <button\n                        type=\"button\"\n                        className=\"close\"\n                        onClick={() => setShow(false)}\n                      >\n                        <span aria-hidden=\"true\">&times;</span>\n                      </button>\n                    </div>\n                    <div className=\"modal-body\">\n                      <div className=\"form-group\">\n                        <label\n                          htmlFor=\"recipient-name\"\n                          className=\"col-form-label\"\n                        >\n                          Host:\n                        </label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          id=\"recipient-name\"\n                          defaultValue={singleData.name}\n                          readOnly={true}\n                          name={\"e_host_name\"}\n                          ref={register({ required: true })}\n                        />\n                      </div>\n\n                      {editMode &&\n                        singleData.ipv4addrs.length > 0 &&\n                        JSON.parse(singleData.ipv4addrs).map((ipData, i) => {\n                          return (\n                            <div className=\"form-group\">\n                              <label\n                                htmlFor=\"recipient-name\"\n                                className=\"col-form-label\"\n                              >\n                                IP:\n                              </label>\n                              <div className={\"d-flex align-items-center\"}>\n                                <input\n                                  type=\"text\"\n                                  className=\"form-control\"\n                                  id=\"recipient-name\"\n                                  defaultValue={ipData.ipv4addr}\n                                  name={`e_ip_${i}`}\n                                  ref={register({ required: true })}\n                                />\n                                &nbsp;&nbsp;\n                                <span\n                                  style={{ cursor: \"pointer\" }}\n                                  onClick={() => {\n                                    const copySingleData = singleData;\n                                    const removeData = {\n                                      ...copySingleData,\n                                      ipv4addrs: JSON.stringify(\n                                        JSON.parse(\n                                          copySingleData.ipv4addrs\n                                        ).filter(\n                                          (d) => d.ipv4addr != ipData.ipv4addr\n                                        )\n                                      ),\n                                    };\n                                    setSingleData(removeData);\n                                  }}\n                                >\n                                  <FontAwesomeIcon\n                                    icon={faTimesCircle}\n                                    className={\"text-danger\"}\n                                  />\n                                </span>\n                              </div>\n                            </div>\n                          );\n                        })}\n                      <div className={\"text-right\"}>\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-default px-0 font-weight-bold\"\n                          style={{ textDecoration: \"underline\" }}\n                          onClick={() => {\n                            if (\n                              totalInputAllowed >\n                              JSON.parse(singleData.ipv4addrs).length\n                            ) {\n                              const ddd = {\n                                ...singleData,\n                                ipv4addrs: JSON.stringify([\n                                  ...JSON.parse(singleData.ipv4addrs),\n                                  { ipv4addr: \"\" },\n                                ]),\n                              };\n                              setSingleData(ddd);\n                            }\n                          }}\n                        >\n                          Add IP\n                        </button>\n                      </div>\n                    </div>\n                    <div className=\"modal-footer\">\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-secondary\"\n                        onClick={() => setShow(false)}\n                      >\n                        Close\n                      </button>\n                      <button type=\"submit\" className=\"btn btn-primary\">\n                        Update Host IP\n                      </button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          )}\n        </Modal.Body>\n      </Modal>\n    </React.Fragment>\n  );\n};\n\nexport default HostRecordItem;\n","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/service/service.js",["186"],"import axios from \"axios\";\nimport { getHostRecords } from \"../redux/dns/host/action\";\nimport { toastr } from \"react-redux-toastr\";\n\nexport const service = axios.create({\n  baseURL: \"http://localhost:9000\",\n});\n\nservice.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    // whatever you want to do with the error\n    console.log(error.response);\n    commonErrorOrSuccess({\n      message: JSON.stringify(error.response.data),\n    });\n    // throw error;\n  }\n);\n\nconst commonErrorOrSuccess = ({ message }) => {\n  toastr.error(\"Bammer!\", `${message} `);\n};\n\nexport default service;\n","/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/atoms/dns/hostNameText.js",[],"/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/redux/dns/txt/action.js",[],"/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/redux/dns/mx/action.js",[],"/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/views/Components/mx/MxItem.js",[],"/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/views/Components/txt/TxtItem.js",[],"/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/redux/dns/txt/type.js",[],"/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/utils/reducerUtil.js",[],"/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/redux/dns/mx/type.js",[],"/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/redux/dns/host/reducer.js",[],"/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/redux/dns/host/type.js",[],"/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/redux/dns/host/action.js",[],"/Users/gagudeep/Documents/projects/ahmed/ddi/frontend/src/utils/commonToastr.js",[],{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","severity":1,"message":"192","line":5,"column":8,"nodeType":"193","messageId":"194","endLine":5,"endColumn":13},{"ruleId":"195","severity":1,"message":"196","line":31,"column":15,"nodeType":"197","endLine":31,"endColumn":45},{"ruleId":"198","severity":1,"message":"199","line":33,"column":17,"nodeType":"197","endLine":37,"endColumn":19},{"ruleId":"200","severity":1,"message":"201","line":74,"column":17,"nodeType":"202","endLine":74,"endColumn":43},{"ruleId":"191","severity":1,"message":"203","line":8,"column":11,"nodeType":"193","messageId":"194","endLine":8,"endColumn":22},{"ruleId":"204","severity":1,"message":"205","line":16,"column":6,"nodeType":"206","endLine":16,"endColumn":33,"suggestions":"207"},{"ruleId":"204","severity":1,"message":"208","line":10,"column":6,"nodeType":"206","endLine":10,"endColumn":8,"suggestions":"209"},{"ruleId":"210","severity":1,"message":"211","line":3,"column":1,"nodeType":"212","endLine":26,"endColumn":3},{"ruleId":"191","severity":1,"message":"213","line":2,"column":10,"nodeType":"193","messageId":"194","endLine":2,"endColumn":13},{"ruleId":"191","severity":1,"message":"214","line":2,"column":15,"nodeType":"193","messageId":"194","endLine":2,"endColumn":19},{"ruleId":"191","severity":1,"message":"215","line":2,"column":21,"nodeType":"193","messageId":"194","endLine":2,"endColumn":24},{"ruleId":"204","severity":1,"message":"216","line":20,"column":6,"nodeType":"206","endLine":20,"endColumn":8,"suggestions":"217"},{"ruleId":"204","severity":1,"message":"216","line":16,"column":6,"nodeType":"206","endLine":16,"endColumn":8,"suggestions":"218"},{"ruleId":"204","severity":1,"message":"216","line":16,"column":6,"nodeType":"206","endLine":16,"endColumn":8,"suggestions":"219"},{"ruleId":"220","severity":1,"message":"221","line":190,"column":61,"nodeType":"222","messageId":"223","endLine":190,"endColumn":63},{"ruleId":"191","severity":1,"message":"224","line":2,"column":10,"nodeType":"193","messageId":"194","endLine":2,"endColumn":24},"no-native-reassign",["225"],"no-negated-in-lhs",["226"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'accessToken' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'axios'. Either exclude it or remove the dependency array. Outer scope values like 'axios' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["227"],"React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["228"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Nav' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["229"],["230"],["231"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'getHostRecords' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"236","fix":"238"},{"desc":"236","fix":"239"},"Update the dependencies array to be: [props, setUserInfo]",{"range":"240","text":"241"},"Update the dependencies array to be: [props.history]",{"range":"242","text":"243"},"Update the dependencies array to be: [dispatch]",{"range":"244","text":"245"},{"range":"246","text":"245"},{"range":"247","text":"245"},[610,637],"[props, setUserInfo]",[207,209],"[props.history]",[613,615],"[dispatch]",[539,541],[531,533]]