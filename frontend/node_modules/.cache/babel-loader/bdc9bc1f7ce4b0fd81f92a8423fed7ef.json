{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\ddi\\\\frontend\\\\src\\\\views\\\\Components\\\\HostRecordItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nimport swal from 'sweetalert';\nimport Modal from 'react-bootstrap/Modal';\nimport axios from 'axios';\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst totalInputAllowed = 4;\n\nconst HostRecordItem = ({\n  dnsData,\n  responseD,\n  getDns\n}) => {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const [editMode, setEditMode] = useState(false);\n  const [singleData, setSingleData] = useState({});\n  const [responseData, setResponseData] = React.useState('');\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n\n  const confirmDelete = (id, name) => {\n    swal({\n      title: 'Are you sure?',\n      icon: 'warning',\n      buttons: true,\n      dangerMode: true\n    }).then(willDelete => {\n      if (willDelete) {\n        deleteRecord(id, name);\n      }\n    });\n  };\n\n  const deleteRecord = (id, name) => {\n    axios.post('http://localhost:9000/infoblox/deleteHostRecord', {\n      id,\n      name\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(resp => {\n      setResponseData(resp.data);\n      getDns();\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const updateClicked = data => {\n    const ipAdd = [];\n    delete data.numberOfIps;\n    delete data.ip_1;\n    const eHostName = data.e_host_name;\n    delete data.e_host_name;\n    Object.keys(data).length > 0 && Object.keys(data).forEach(val => {\n      ipAdd.push({\n        ipv4addr: data[val]\n      });\n    });\n    const d = {\n      hostName: eHostName,\n      ipv4addrs: {\n        ipv4addrs: ipAdd\n      }\n    };\n    axios.post('http://localhost:9000/infoblox/updateHostIP', d, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(resp => {\n      setResponseData(resp.data);\n      getDns();\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [responseData !== '' && responseData.Error !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: responseData.Error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this) : responseData.result !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-success\",\n      role: \"alert\",\n      children: \"Record Deleted\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\xA0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-bordered bg-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"IP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: 'text-center',\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: dnsData.length > 0 && dnsData.map(d => {\n          const dd = JSON.parse(d.ipv4addrs).length > 0 && JSON.parse(d.ipv4addrs).map(v => v.ipv4addr).join(' / ');\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: d.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: dd\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: 'd-flex justify-content-around',\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    cursor: 'pointer'\n                  },\n                  onClick: () => confirmDelete(d.id, d.name),\n                  children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faTimesCircle,\n                    className: 'text-danger'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    cursor: 'pointer'\n                  },\n                  onClick: () => {\n                    setShow(true);\n                    setSingleData(d);\n                    setEditMode(true);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faEdit,\n                    className: 'text-primary'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: () => setShow(false),\n      dialogClassName: \"modal-90w\",\n      \"aria-labelledby\": \"example-custom-modal-styling-title\",\n      children: /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: editMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [responseData.Error !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-danger\",\n            role: \"alert\",\n            children: responseData.Error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 17\n          }, this) : responseData.result !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-success\",\n            role: \"alert\",\n            children: \"Record Added\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-dialog\",\n            role: \"document\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-content\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleSubmit(updateClicked),\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"modal-header\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"close\",\n                    onClick: () => setShow(false),\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      \"aria-hidden\": \"true\",\n                      children: \"\\xD7\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"modal-body\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"recipient-name\",\n                      className: \"col-form-label\",\n                      children: \"Host:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 185,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      className: \"form-control\",\n                      id: \"recipient-name\",\n                      defaultValue: singleData.name,\n                      readOnly: true,\n                      name: 'e_host_name',\n                      ref: register({\n                        required: true\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 191,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 23\n                  }, this), editMode && singleData.ipv4addrs.length > 0 && JSON.parse(singleData.ipv4addrs).map((ipData, i) => {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"recipient-name\",\n                        className: \"col-form-label\",\n                        children: \"IP:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 207,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: 'd-flex align-items-center',\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          className: \"form-control\",\n                          id: \"recipient-name\",\n                          defaultValue: ipData.ipv4addr,\n                          name: `e_ip_${i}`,\n                          ref: register({\n                            required: true\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 214,\n                          columnNumber: 33\n                        }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            cursor: 'pointer'\n                          },\n                          onClick: () => {\n                            const copySingleData = singleData;\n                            const removeData = { ...copySingleData,\n                              ipv4addrs: JSON.stringify(JSON.parse(copySingleData.ipv4addrs).filter(d => d.ipv4addr != ipData.ipv4addr))\n                            };\n                            setSingleData(removeData);\n                          },\n                          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                            icon: faTimesCircle,\n                            className: 'text-danger'\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 240,\n                            columnNumber: 35\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 223,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 213,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 206,\n                      columnNumber: 29\n                    }, this);\n                  }), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: 'text-right',\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      className: \"btn btn-default px-0 font-weight-bold\",\n                      style: {\n                        textDecoration: 'underline'\n                      },\n                      onClick: () => {\n                        if (totalInputAllowed > JSON.parse(singleData.ipv4addrs).length) {\n                          const ddd = { ...singleData,\n                            ipv4addrs: JSON.stringify([...JSON.parse(singleData.ipv4addrs), {\n                              ipv4addr: ''\n                            }])\n                          };\n                          setSingleData(ddd);\n                        }\n                      },\n                      children: \"Add Field\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 250,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"modal-footer\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-secondary\",\n                    onClick: () => setShow(false),\n                    children: \"Close\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \"btn btn-primary\",\n                    children: \"Update Host IP\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HostRecordItem, \"ESAPMZt5IB+m1hGasRId9I879Og=\", false, function () {\n  return [useForm];\n});\n\n_c = HostRecordItem;\nexport default HostRecordItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"HostRecordItem\");","map":{"version":3,"sources":["E:/projects/ddi/frontend/src/views/Components/HostRecordItem.js"],"names":["React","useState","FontAwesomeIcon","faEdit","faTimesCircle","swal","Modal","axios","useForm","totalInputAllowed","HostRecordItem","dnsData","responseD","getDns","show","setShow","editMode","setEditMode","singleData","setSingleData","responseData","setResponseData","register","handleSubmit","confirmDelete","id","name","title","icon","buttons","dangerMode","then","willDelete","deleteRecord","post","headers","resp","data","catch","err","console","log","updateClicked","ipAdd","numberOfIps","ip_1","eHostName","e_host_name","Object","keys","length","forEach","val","push","ipv4addr","d","hostName","ipv4addrs","Error","undefined","result","map","dd","JSON","parse","v","join","cursor","required","ipData","i","copySingleData","removeData","stringify","filter","textDecoration","ddd"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport swal from 'sweetalert';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport axios from 'axios';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nconst totalInputAllowed = 4;\r\n\r\nconst HostRecordItem = ({ dnsData, responseD, getDns }) => {\r\n  const [show, setShow] = useState(false);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [singleData, setSingleData] = useState({});\r\n  const [responseData, setResponseData] = React.useState('');\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  const confirmDelete = (id, name) => {\r\n    swal({\r\n      title: 'Are you sure?',\r\n      icon: 'warning',\r\n      buttons: true,\r\n      dangerMode: true,\r\n    }).then((willDelete) => {\r\n      if (willDelete) {\r\n        deleteRecord(id, name);\r\n      }\r\n    });\r\n  };\r\n\r\n  const deleteRecord = (id, name) => {\r\n    axios\r\n      .post(\r\n        'http://localhost:9000/infoblox/deleteHostRecord',\r\n        { id, name },\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then((resp) => {\r\n        setResponseData(resp.data);\r\n        getDns();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const updateClicked = (data) => {\r\n    const ipAdd = [];\r\n    delete data.numberOfIps;\r\n    delete data.ip_1;\r\n    const eHostName = data.e_host_name;\r\n    delete data.e_host_name;\r\n\r\n    Object.keys(data).length > 0 &&\r\n      Object.keys(data).forEach((val) => {\r\n        ipAdd.push({\r\n          ipv4addr: data[val],\r\n        });\r\n      });\r\n\r\n    const d = {\r\n      hostName: eHostName,\r\n      ipv4addrs: { ipv4addrs: ipAdd },\r\n    };\r\n\r\n    axios\r\n      .post('http://localhost:9000/infoblox/updateHostIP', d, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then((resp) => {\r\n        setResponseData(resp.data);\r\n        getDns();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {responseData !== '' && responseData.Error !== undefined ? (\r\n        <div className='alert alert-danger' role='alert'>\r\n          {responseData.Error}\r\n        </div>\r\n      ) : responseData.result !== undefined ? (\r\n        <div className='alert alert-success' role='alert'>\r\n          Record Deleted\r\n        </div>\r\n      ) : (\r\n        <div>&nbsp;</div>\r\n      )}\r\n      <table className='table table-bordered bg-white'>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>IP</th>\r\n            <th className={'text-center'}>Actions</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {dnsData.length > 0 &&\r\n            dnsData.map((d) => {\r\n              const dd =\r\n                JSON.parse(d.ipv4addrs).length > 0 &&\r\n                JSON.parse(d.ipv4addrs)\r\n                  .map((v) => v.ipv4addr)\r\n                  .join(' / ');\r\n              return (\r\n                <tr>\r\n                  <td>{d.name}</td>\r\n                  <td>{dd}</td>\r\n                  <td>\r\n                    <div className={'d-flex justify-content-around'}>\r\n                      <span\r\n                        style={{ cursor: 'pointer' }}\r\n                        onClick={() => confirmDelete(d.id, d.name)}\r\n                      >\r\n                        <FontAwesomeIcon\r\n                          icon={faTimesCircle}\r\n                          className={'text-danger'}\r\n                        />\r\n                      </span>\r\n\r\n                      <span\r\n                        style={{ cursor: 'pointer' }}\r\n                        onClick={() => {\r\n                          setShow(true);\r\n                          setSingleData(d);\r\n                          setEditMode(true);\r\n                        }}\r\n                      >\r\n                        <FontAwesomeIcon\r\n                          icon={faEdit}\r\n                          className={'text-primary'}\r\n                        />\r\n                      </span>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n        </tbody>\r\n      </table>\r\n      <Modal\r\n        show={show}\r\n        onHide={() => setShow(false)}\r\n        dialogClassName='modal-90w'\r\n        aria-labelledby='example-custom-modal-styling-title'\r\n      >\r\n        <Modal.Body>\r\n          {editMode && (\r\n            <div>\r\n              {responseData.Error !== undefined ? (\r\n                <div className='alert alert-danger' role='alert'>\r\n                  {responseData.Error}\r\n                </div>\r\n              ) : responseData.result !== undefined ? (\r\n                <div className='alert alert-success' role='alert'>\r\n                  Record Added\r\n                </div>\r\n              ) : (\r\n                <div>&nbsp;</div>\r\n              )}\r\n              <div className='modal-dialog' role='document'>\r\n                <div className='modal-content'>\r\n                  <form onSubmit={handleSubmit(updateClicked)}>\r\n                    <div className='modal-header'>\r\n                      <button\r\n                        type='button'\r\n                        className='close'\r\n                        onClick={() => setShow(false)}\r\n                      >\r\n                        <span aria-hidden='true'>&times;</span>\r\n                      </button>\r\n                    </div>\r\n                    <div className='modal-body'>\r\n                      <div className='form-group'>\r\n                        <label\r\n                          htmlFor='recipient-name'\r\n                          className='col-form-label'\r\n                        >\r\n                          Host:\r\n                        </label>\r\n                        <input\r\n                          type='text'\r\n                          className='form-control'\r\n                          id='recipient-name'\r\n                          defaultValue={singleData.name}\r\n                          readOnly={true}\r\n                          name={'e_host_name'}\r\n                          ref={register({ required: true })}\r\n                        />\r\n                      </div>\r\n\r\n                      {editMode &&\r\n                        singleData.ipv4addrs.length > 0 &&\r\n                        JSON.parse(singleData.ipv4addrs).map((ipData, i) => {\r\n                          return (\r\n                            <div className='form-group'>\r\n                              <label\r\n                                htmlFor='recipient-name'\r\n                                className='col-form-label'\r\n                              >\r\n                                IP:\r\n                              </label>\r\n                              <div className={'d-flex align-items-center'}>\r\n                                <input\r\n                                  type='text'\r\n                                  className='form-control'\r\n                                  id='recipient-name'\r\n                                  defaultValue={ipData.ipv4addr}\r\n                                  name={`e_ip_${i}`}\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                &nbsp;&nbsp;\r\n                                <span\r\n                                  style={{ cursor: 'pointer' }}\r\n                                  onClick={() => {\r\n                                    const copySingleData = singleData;\r\n                                    const removeData = {\r\n                                      ...copySingleData,\r\n                                      ipv4addrs: JSON.stringify(\r\n                                        JSON.parse(\r\n                                          copySingleData.ipv4addrs\r\n                                        ).filter(\r\n                                          (d) => d.ipv4addr != ipData.ipv4addr\r\n                                        )\r\n                                      ),\r\n                                    };\r\n                                    setSingleData(removeData);\r\n                                  }}\r\n                                >\r\n                                  <FontAwesomeIcon\r\n                                    icon={faTimesCircle}\r\n                                    className={'text-danger'}\r\n                                  />\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      <div className={'text-right'}>\r\n                        <button\r\n                          type='button'\r\n                          className='btn btn-default px-0 font-weight-bold'\r\n                          style={{ textDecoration: 'underline' }}\r\n                          onClick={() => {\r\n                            if (\r\n                              totalInputAllowed >\r\n                              JSON.parse(singleData.ipv4addrs).length\r\n                            ) {\r\n                              const ddd = {\r\n                                ...singleData,\r\n                                ipv4addrs: JSON.stringify([\r\n                                  ...JSON.parse(singleData.ipv4addrs),\r\n                                  { ipv4addr: '' },\r\n                                ]),\r\n                              };\r\n                              setSingleData(ddd);\r\n                            }\r\n                          }}\r\n                        >\r\n                          Add Field\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                    <div className='modal-footer'>\r\n                      <button\r\n                        type='button'\r\n                        className='btn btn-secondary'\r\n                        onClick={() => setShow(false)}\r\n                      >\r\n                        Close\r\n                      </button>\r\n                      <button type='submit' className='btn btn-primary'>\r\n                        Update Host IP\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Modal.Body>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default HostRecordItem;\r\n"]},"metadata":{},"sourceType":"module"}