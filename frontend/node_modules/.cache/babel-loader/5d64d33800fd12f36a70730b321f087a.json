{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shama025/Desktop/front-end/src/views/Pages/PublicPages/Login/Login.js\",\n    _s = $RefreshSig$();\n\n/* global FB */\nimport React, { useEffect, useState } from 'react'; // import { Button, Form } from \"react-bootstrap\";\n\nimport { useForm } from 'react-hook-form';\nimport { login } from '../../../../redux/auth/action';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { apiPaths } from '../../../../utils/apiPaths';\nimport { RequestAuthorizationCode } from 'react-oauth2-auth-code-flow';\nimport ClientOAuth2 from 'client-oauth2';\nconst oauthClient = new ClientOAuth2({\n  clientId: apiPaths.fb_app_id,\n  clientSecret: apiPaths.fb_client_secret_id,\n  accessTokenUri: 'https://idp.myid-stg.disney.com/as/token.oauth2',\n  authorizationUri: 'https://idp.myid-stg.disney.com/as/authorization.oauth2',\n  redirectUri: 'http://localhost:3000/callback',\n  scopes: ['profile', 'email', 'id'] //public_profile or email\n\n});\n\nconst Login = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const auth = useSelector(state => state.auth.isAuth);\n  const {\n    register,\n    handleSubmit,\n    errors,\n    watch,\n    formState\n  } = useForm({\n    mode: 'onChange'\n  });\n\n  const loginUser = value => {\n    const loginData = {\n      userName: value.email,\n      password: value.password\n    };\n    dispatch(login(loginData));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-form-sec-outer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form-sec-inner\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form login-form-sec\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(RequestAuthorizationCode, {\n            oauthClient: oauthClient,\n            state: {\n              from: '/'\n            },\n            render: ({\n              url\n            }) => /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-primary w-100\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: url,\n                style: {\n                  color: 'white'\n                },\n                children: \"Login With MyID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"mb-4\",\n          onSubmit: handleSubmit(loginUser),\n          autoComplete: \"off\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"exampleInputEmail1\",\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              className: \"form-control\",\n              id: \"exampleInputEmail1\",\n              placeholder: \"Email address\",\n              \"aria-describedby\": \"emailHelp\",\n              name: \"email\",\n              ref: register({\n                required: {\n                  value: true,\n                  message: 'Please enter your email'\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"customErrors text-danger mt-2\",\n              children: errors.email.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group password-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"exampleInputPassword1\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"passInput\",\n              className: \"form-control\",\n              id: \"exampleInputPassword1\",\n              placeholder: \"Password\",\n              name: \"password\",\n              ref: register({\n                required: true\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"customErrors text-danger mt-2\",\n              children: \"Please enter password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-check\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-check-label\",\n              htmlFor: \"rememberPassword\",\n              children: \"Remember me\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary w-100\",\n            children: 'Log In'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"fL7ydU+IVpjs6dNHy/PdEO+e2F4=\", false, function () {\n  return [useDispatch, useSelector, useForm];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/shama025/Desktop/front-end/src/views/Pages/PublicPages/Login/Login.js"],"names":["React","useEffect","useState","useForm","login","useDispatch","useSelector","apiPaths","RequestAuthorizationCode","ClientOAuth2","oauthClient","clientId","fb_app_id","clientSecret","fb_client_secret_id","accessTokenUri","authorizationUri","redirectUri","scopes","Login","dispatch","auth","state","isAuth","register","handleSubmit","errors","watch","formState","mode","loginUser","value","loginData","userName","email","password","from","url","color","required","message"],"mappings":"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","sourcesContent":["/* global FB */\nimport React, { useEffect, useState } from 'react';\n// import { Button, Form } from \"react-bootstrap\";\nimport { useForm } from 'react-hook-form';\nimport { login } from '../../../../redux/auth/action';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { apiPaths } from '../../../../utils/apiPaths';\nimport { RequestAuthorizationCode } from 'react-oauth2-auth-code-flow';\nimport ClientOAuth2 from 'client-oauth2';\n\n\nconst oauthClient = new ClientOAuth2({\n  clientId: apiPaths.fb_app_id,\n  clientSecret: apiPaths.fb_client_secret_id,\n  accessTokenUri: 'https://idp.myid-stg.disney.com/as/token.oauth2',\n  authorizationUri: 'https://idp.myid-stg.disney.com/as/authorization.oauth2',\n  redirectUri: 'http://localhost:3000/callback',\n  scopes: ['profile', 'email', 'id'], //public_profile or email\n});\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const auth = useSelector((state) => state.auth.isAuth);\n  const { register, handleSubmit, errors, watch, formState } = useForm({\n    mode: 'onChange',\n  });\n\n  const loginUser = (value) => {\n    const loginData = {\n      userName: value.email,\n      password: value.password,\n    };\n    dispatch(login(loginData));\n  };\n\n  return (\n    <div className='login-form-sec-outer'>\n      <div className='login-form-sec-inner'>\n        <div className='login-form login-form-sec'>\n          <div>\n            <RequestAuthorizationCode\n              oauthClient={oauthClient}\n              state={{ from: '/' }}\n              render={({ url }) => (\n                \n                  <button type=\"button\" className='btn btn-primary w-100'>\n                    <a href={url} style={{color:'white'}} >Login With MyID</a>\n                  </button>                \n                \n              )}\n            />            \n          </div>\n          <form\n            className='mb-4'\n            onSubmit={handleSubmit(loginUser)}\n            autoComplete='off'\n          >\n            <div className='form-group'>\n              <label htmlFor='exampleInputEmail1'>Email address</label>\n              <input\n                type='email'\n                className='form-control'\n                id='exampleInputEmail1'\n                placeholder='Email address'\n                aria-describedby='emailHelp'\n                name='email'\n                ref={register({\n                  required: {\n                    value: true,\n                    message: 'Please enter your email',\n                  },\n                })}\n              />\n              {errors.email && (\n                <p className='customErrors text-danger mt-2'>\n                  {errors.email.message}\n                </p>\n              )}\n            </div>\n            <div className='form-group password-input'>\n              <label htmlFor='exampleInputPassword1'>Password</label>\n              <input\n                type='password'\n                id='passInput'\n                className='form-control'\n                id='exampleInputPassword1'\n                placeholder='Password'\n                name='password'\n                ref={register({ required: true })}\n              />\n              {errors.password && (\n                <p className='customErrors text-danger mt-2'>\n                  Please enter password\n                </p>\n              )}\n            </div>\n            <div className='form-check'>\n              \n              <label className='form-check-label' htmlFor='rememberPassword'>\n                Remember me\n              </label>\n            </div>\n            <button type='submit' className='btn btn-primary w-100'>\n              {'Log In'}\n            </button>\n\n            {/*<Dimmer active={loading} inverted><Loader active={loading} className={'lcolor'}/></Dimmer>*/}\n          </form>          \n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}